@page "/GroceryStore"

@if (Products.Count != 0)
{
    <h1>Food Product's</h1>
}


<ul>
    
    @if (Productisle.Count == 0)


    {
        <button class="btn btn-primary" @onclick="GroceryList">GroceryList</button><br><br>
    }
    @foreach (var GroceryIsle in Productisle)

    
    {
        <li><button class="btn btn-default" @onclick="() =>Items=newProducts(GroceryIsle.isleNumber)">@GroceryIsle.isleName</button></li>
    }


    <br><br>

    <h3>@GrcyProducts</h3>


    
    <br><br>
    @if (Productisle.Count != 0)
    {
        <table class="table">
            <tr>
                <th>Quantity</th>
                <th>ProductId</th>
                <th>Product</th>
                <th>Price</th>

            </tr>
            @foreach (var Productitem in Items)
            {
                <tr>
                    <td><button class="btn btn-default" @onclick="() => GroceryItem.DescreaseQuaniity()">-</button>  @GroceryItem.Quantity<button class="btn btn-default"
                    @onclick="() => GroceryItem.IncreaseQuaniity()">+</button></td>
                    <td>@Productitem.ProductId</td>
                    <td>@Productitem.Product</td>
                    <td>@Productitem.Price</td>                    
                </tr>
            }
        </table>
    }

</ul>


@code {


    private List<GroceryIsle> Productisle = new List<GroceryIsle>();
    private List<FoodItem> Items = new List<FoodItem>();
    private string GrcyProducts = "";

        private void GroceryProducts()
    {
        GroceryIsle PIsle1 = new GroceryIsle();
        PIsle1.isleName = "snacks";
        PIsle1.isleNumber = 1;
        PIsle1.FoodItemsList.Add(new FoodItem
        {
            Quantity = 10,
            ProductId = 1,
            Product = "Lays",
            Price = 2
        });
        PIsle1.FoodItemsList.Add(new FoodItem
        {
            Quantity = 4,
            ProductId = 2,
            Product = "Samosas",
            Price = 5
        });
        PIsle1.FoodItemsList.Add(new FoodItem
        {
            Quantity = 5,
            ProductId = 3,
            Product = "cake rusk",
            Price = 2
        });

        GroceryIsle PIsle2 = new GroceryIsle();
        PIsle2.isleName = "spices";
        PIsle2.isleNumber = 2;
        PIsle2.FoodItemsList.Add(new FoodItem
        {
            Quantity = 7,
            ProductId = 1,
            Product = "Turmeric",
            Price = 8
        });
        PIsle2.FoodItemsList.Add(new FoodItem
        {
            Quantity = 6,
            ProductId = 2,
            Product = "Pepper",
            Price = 6
        });
        PIsle2.FoodItemsList.Add(new FoodItem
        {
            Quantity = 1,
            ProductId = 3,
            Product = "Ginger",
            Price = 2
        });


        GroceryIsle PIsle3 = new GroceryIsle();
        PIsle3.isleName = "fastFood";
        PIsle3.isleNumber = 3;
        PIsle3.FoodItemsList.Add(new FoodItem
        {
            Quantity = 11,
            ProductId = 1,
            Product = "Noodles",
            Price = 7
        });
        PIsle3.FoodItemsList.Add(new FoodItem
        {
            Quantity = 24,
            ProductId = 2,
            Product = "Tortillas",
            Price = 5
        });
        PIsle3.FoodItemsList.Add(new FoodItem
        {
            Quantity = 15,
            ProductId = 3,
            Product = "Biryani",
            Price = 4
        });

        Productisle.Add(PIsle1);
        Productisle.Add(PIsle2);
        Productisle.Add(PIsle3);


    }

    
    private List<FoodItem> newProducts(int isleNumber)
    {
        foreach (var GroceryIsle in Productisle)
        {
            if (GroceryIsle.isleNumber == isleNumber)
            {
                newList = GroceryIsle.isleName;
                return GroceryIsle.FoodItemsList;
            }
        }
        return new List<FoodItem>();
    }
}
