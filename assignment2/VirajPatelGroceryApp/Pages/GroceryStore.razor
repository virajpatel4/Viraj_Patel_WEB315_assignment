@page "/GroceryStore"

@if (groceryIsle.Count != 0)
{
    <h1>Isle List</h1>
}


<ul>
    
    @if (groceryIsle.Count == 0)
    {
        <button class="btn btn-primary" @onclick="AddProducts">Add Products</button><br><br>
    }
    @foreach (var GroceryIsle in groceryIsle)
    {
        <li><button class="btn btn-default" @onclick="() =>tmpItems=GetItems(GroceryIsle.isleNumber)">@GroceryIsle.isleName</button></li>
    }


    <br><br>
    <h3>@currentIsle</h3>


    
    <br><br>
    @if (groceryIsle.Count != 0)
    {
        <table class="table">
            <tr>
                <th width="150">Food Item</th>
                <th width="150">Price</th>
                <th width="150">Weight</th>
                <th width="150">Quantity</th>

            </tr>
            @foreach (var GroceryItem in tmpItems)
            {
                <tr>
                    <td>@GroceryItem.foodItemName</td>
                    <td>@GroceryItem.foodItemPrice</td>
                    <td>@GroceryItem.foodItemWeight</td>
                    <td><button class="btn btn-default" @onclick="() => GroceryItem.DescreaseQuaniity()">-</button>  @GroceryItem.Quantity<button class="btn btn-default"
                    @onclick="() => GroceryItem.IncreaseQuaniity()">+</button></td>
                </tr>
            }
        </table>
    }

</ul>


@code {


    private List<GroceryIsle> groceryIsle = new List<GroceryIsle>();
    private List<FoodItem> tmpItems = new List<FoodItem>();
    private string currentIsle = "";

        private void AddProducts()
    {
        Console.Write("worked");
        GroceryIsle isl1 = new GroceryIsle();
        isl1.isleName = "Vegetables";
        isl1.isleNumber = 1;
        isl1.FoodItemsList.Add(new FoodItem
        {
            Quantity = 1,
            foodItemName = "Tomato",
            foodItemWeight = "1/2 lb",
            foodItemPrice =
        1.45
        });
        isl1.FoodItemsList.Add(new FoodItem
        {
            Quantity = 1,
            foodItemName = "Onion",
            foodItemWeight = "1/2 lb",
            foodItemPrice =
        1.78
        });
        isl1.FoodItemsList.Add(new FoodItem
        {
            Quantity = 1,
            foodItemName = "Carrot",
            foodItemWeight = "1/2 lb",
            foodItemPrice =
        2.00
        });

        GroceryIsle isl2 = new GroceryIsle();
        isl2.isleName = "Produce";
        isl2.isleNumber = 2;
        isl2.FoodItemsList.Add(new FoodItem
        {
            Quantity = 15,
            foodItemName = "Apples",
            foodItemWeight = "1.5",
            foodItemPrice =
        2.99
        });
        isl2.FoodItemsList.Add(new FoodItem
        {
            Quantity = 20,
            foodItemName = "Oranges",
            foodItemWeight = "1.5",
            foodItemPrice =
        5.99
        });
        isl2.FoodItemsList.Add(new FoodItem
        {
            Quantity = 10,
            foodItemName = "Lemons",
            foodItemWeight = "1.5",
            foodItemPrice =
        1.99
        });


        GroceryIsle isl3 = new GroceryIsle();
        isl3.isleName = "Dairy";
        isl3.isleNumber = 3;
        isl3.FoodItemsList.Add(new FoodItem
        {
            Quantity = 10,
            foodItemName = "Milk",
            foodItemWeight = "1.5",
            foodItemPrice = 5.99
        });
        isl3.FoodItemsList.Add(new FoodItem
        {
            Quantity = 20,
            foodItemName = "Yogurt",
            foodItemWeight = "1.5",
            foodItemPrice =
        2.79
        });
        isl3.FoodItemsList.Add(new FoodItem
        {
            Quantity = 5,
            foodItemName = "Butter",
            foodItemWeight = "1.5",
            foodItemPrice =
        5.00
        });

        groceryIsle.Add(isl1);
        groceryIsle.Add(isl2);
        groceryIsle.Add(isl3);
    }

    
    private List<FoodItem> GetItems(int isleNumber)
    {
        foreach (var GroceryIsle in groceryIsle)
        {
            if (GroceryIsle.isleNumber == isleNumber)
            {
                currentIsle = GroceryIsle.isleName;
                return GroceryIsle.FoodItemsList;
            }
        }
        return new List<FoodItem>();
    }
}